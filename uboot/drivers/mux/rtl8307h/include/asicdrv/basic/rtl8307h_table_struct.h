/*
*  ## Please DO NOT edit this file!! ##
*  This file is auto-generated from the register source files.
*  Any modifications to this file will be LOST when it is re-generated.
*
*  ----------------------------------------------------------------
*  (c) Realtek Semiconductor Corp. 2008
*
*  This file is property of Realtek Semiconductor Corp.
*  All rights reserved.
*
*  Abstract: chip register definition and API of RTL8307H
*
*  ---------------------------------------------------------------- */

#ifndef __RTL8307H_TABLE_STRUCT_H__
#define __RTL8307H_TABLE_STRUCT_H__

typedef enum rtl8307h_vlanField_list_e
{
    VLAN_MBR = 0,
    VLAN_UTAG,
    VLAN_FID,
    VLAN_ULFID,
    VLAN_VLAN_BASE_FWD,
    VLAN_VIDMSB,
    VLAN_VALID,
    VLANFIELD_LIST_END = 7
} rtl8307h_vlanField_list_t;

typedef enum rtl8307h_vlan_camField_list_e
{
    VLAN_CAM_UTAG = 0,
    VLAN_CAM_FID,
    VLAN_CAM_ULFID,
    VLAN_CAM_VLAN_BASE_FWD,
    VLAN_CAM_VID,
    VLAN_CAM_VALID,
    VLAN_CAM_MBR,
    VLAN_CAMFIELD_LIST_END = 7
} rtl8307h_vlan_camField_list_t;

typedef enum rtl8307h_l2_tableField_list_e
{
    L2_TABLE_L3ENTRY = 0,
    L2_TABLE_AGE,
    L2_TABLE_SPA,
    L2_TABLE_SABLOCK,
    L2_TABLE_DABLOCK,
    L2_TABLE_AUTHIX,
    L2_TABLE_STATIC,
    L2_TABLE_FID,
    L2_TABLE_EAVPRI,
    L2_TABLE_EAVPRIEN,
    L2_TABLE_MAC_ADDRESS_40_9 = 10,
    L2_TABLE_CVID_FID,
    L2_TABLE_MAC_ADDRESS_47_41,
    L2_TABLEFIELD_LIST_END = 13
} rtl8307h_l2_tableField_list_t;

typedef enum rtl8307h_lut_bcamField_list_e
{
    LUT_BCAM_L3ENTRY = 0,
    LUT_BCAM_AGE,
    LUT_BCAM_SPA,
    LUT_BCAM_SABLOCK,
    LUT_BCAM_DABLOCK,
    LUT_BCAM_AUTHIX,
    LUT_BCAM_STATIC,
    LUT_BCAM_FID,
    LUT_BCAM_EAVPRI,
    LUT_BCAM_EAVPRIEN,
    LUT_BCAM_MAC_ADDRESS_31_0 = 10,
    LUT_BCAM_CVID_FID,
    LUT_BCAM_MAC_ADDRESS_47_32,
    LUT_BCAMFIELD_LIST_END = 13
} rtl8307h_lut_bcamField_list_t;

typedef enum rtl8307h_action_tableField_list_e
{
    ACTION_TABLE_FNO = 0,
    ACTION_TABLE_DROP,
    ACTION_TABLE_CP2CPU,
    ACTION_TABLE_MIRROR,
    ACTION_TABLE_OTAG,
    ACTION_TABLE_ITAG,
    ACTION_TABLE_PRIRMK,
    ACTION_TABLE_REDIR,
    ACTION_TABLE_DSCPRMK,
    ACTION_TABLE_PRIORITY,
    ACTION_TABLE_BYRATELMT = 10,
    ACTION_TABLE_AIF1,
    ACTION_TABLE_AIF2,
    ACTION_TABLE_AIF3,
    ACTION_TABLEFIELD_LIST_END = 14
} rtl8307h_action_tableField_list_t;

typedef enum rtl8307h_acl_counterField_list_e
{
    ACL_COUNTER_TYPE = 0,
    ACL_COUNTER_CNTMODE,
    ACL_COUNTER_COUNTER,
    ACL_COUNTERFIELD_LIST_END = 3
} rtl8307h_acl_counterField_list_t;

typedef enum rtl8307h_policerField_list_e
{
    POLICER_TYPE = 0,
    POLICER_TOKEN_COUNTER,
    POLICER_THRESHOLD,
    POLICER_RATE,
    POLICERFIELD_LIST_END = 4
} rtl8307h_policerField_list_t;

typedef enum rtl8307h_pie_tableField_list_e
{
    PIE_TABLE_DATA_FIELD1 = 0,
    PIE_TABLE_DATA_FIELD0,
    PIE_TABLE_DATA_FIELD3,
    PIE_TABLE_DATA_FIELD2,
    PIE_TABLE_DATA_FIELD5,
    PIE_TABLE_DATA_FIELD4,
    PIE_TABLE_DATA_FIELD7,
    PIE_TABLE_DATA_FIELD6,
    PIE_TABLE_VALID,
    PIE_TABLE_DATA_FIELD8,
    PIE_TABLE_CARE_FIELD1 = 10,
    PIE_TABLE_CARE_FIELD0,
    PIE_TABLE_CARE_FIELD3,
    PIE_TABLE_CARE_FIELD2,
    PIE_TABLE_CARE_FIELD5,
    PIE_TABLE_CARE_FIELD4,
    PIE_TABLE_CARE_FIELD7,
    PIE_TABLE_CARE_FIELD6,
    PIE_TABLE_CARE_FIELD8,
    PIE_TABLEFIELD_LIST_END = 19
} rtl8307h_pie_tableField_list_t;

typedef enum rtl8307h_groupField_list_e
{
    GROUP_GROUP_IP = 0,
    GROUP_PORT_MASK,
    GROUPFIELD_LIST_END = 2
} rtl8307h_groupField_list_t;

typedef enum rtk_table_list_e
{
    VLAN = 0,
    VLAN_CAM,
    L2_TABLE,
    LUT_BCAM,
    ACTION_TABLE,
    ACL_COUNTER,
    POLICER,
    PIE_TABLE,
    GROUP,
    TABLE_LIST_END = 9
} rtk_table_list_t;

typedef struct rtk_tableField_s
{
    uint16 lsp;               /* LSP of the field */
    uint16 len;               /* field length */
} rtk_tableField_t;

typedef struct rtk_table_s
{
    uint32 type;              /* access table type */
    uint32 size;              /* table size */
    uint32 datareg_num;       /* total data registers */
    uint32 field_num;         /* total field numbers */
    rtk_tableField_t *fields; /* table fields */
} rtk_table_t;

extern int32 table_read(uint32 unit, rtk_table_list_t table, uint32 addr, uint32 *data);
extern int32 table_write(uint32 unit, rtk_table_list_t table, uint32 addr, uint32 *data);
extern rtk_table_t rtl8307h_table_list[];

#endif    /* __RTL8307H_TABLE_STRUCT_H__ */
