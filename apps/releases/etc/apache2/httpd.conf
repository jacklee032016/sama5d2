#
ServerRoot "/usr"


Listen 80

#
# Dynamic Shared Object (DSO) Support
#
LoadModule mpm_worker_module lib/apache2/modules/mod_mpm_worker.so
LoadModule authn_file_module lib/apache2/modules/mod_authn_file.so
#LoadModule authn_dbm_module lib/apache2/modules/mod_authn_dbm.so
#LoadModule authn_anon_module lib/apache2/modules/mod_authn_anon.so
#LoadModule authn_dbd_module lib/apache2/modules/mod_authn_dbd.so
#LoadModule authn_socache_module lib/apache2/modules/mod_authn_socache.so
LoadModule authn_core_module lib/apache2/modules/mod_authn_core.so
LoadModule authz_host_module lib/apache2/modules/mod_authz_host.so
LoadModule authz_groupfile_module lib/apache2/modules/mod_authz_groupfile.so
LoadModule authz_user_module lib/apache2/modules/mod_authz_user.so
#LoadModule authz_dbm_module lib/apache2/modules/mod_authz_dbm.so
#LoadModule authz_owner_module lib/apache2/modules/mod_authz_owner.so
#LoadModule authz_dbd_module lib/apache2/modules/mod_authz_dbd.so
LoadModule authz_core_module lib/apache2/modules/mod_authz_core.so
LoadModule access_compat_module lib/apache2/modules/mod_access_compat.so
LoadModule auth_basic_module lib/apache2/modules/mod_auth_basic.so
#LoadModule auth_form_module lib/apache2/modules/mod_auth_form.so
#LoadModule auth_digest_module lib/apache2/modules/mod_auth_digest.so
#LoadModule allowmethods_module lib/apache2/modules/mod_allowmethods.so
#LoadModule file_cache_module lib/apache2/modules/mod_file_cache.so
#LoadModule cache_module lib/apache2/modules/mod_cache.so
#LoadModule cache_disk_module lib/apache2/modules/mod_cache_disk.so
#LoadModule cache_socache_module lib/apache2/modules/mod_cache_socache.so
#LoadModule socache_shmcb_module lib/apache2/modules/mod_socache_shmcb.so
#LoadModule socache_dbm_module lib/apache2/modules/mod_socache_dbm.so
#LoadModule socache_memcache_module lib/apache2/modules/mod_socache_memcache.so
#LoadModule watchdog_module lib/apache2/modules/mod_watchdog.so
#LoadModule macro_module lib/apache2/modules/mod_macro.so
#LoadModule dbd_module lib/apache2/modules/mod_dbd.so
#LoadModule dumpio_module lib/apache2/modules/mod_dumpio.so
#LoadModule buffer_module lib/apache2/modules/mod_buffer.so
#LoadModule ratelimit_module lib/apache2/modules/mod_ratelimit.so
LoadModule reqtimeout_module lib/apache2/modules/mod_reqtimeout.so
#LoadModule ext_filter_module lib/apache2/modules/mod_ext_filter.so
#LoadModule request_module lib/apache2/modules/mod_request.so
#LoadModule include_module lib/apache2/modules/mod_include.so
LoadModule filter_module lib/apache2/modules/mod_filter.so
#LoadModule substitute_module lib/apache2/modules/mod_substitute.so
#LoadModule sed_module lib/apache2/modules/mod_sed.so
#LoadModule deflate_module lib/apache2/modules/mod_deflate.so
LoadModule mime_module lib/apache2/modules/mod_mime.so
LoadModule log_config_module lib/apache2/modules/mod_log_config.so
#LoadModule log_debug_module lib/apache2/modules/mod_log_debug.so
#LoadModule logio_module lib/apache2/modules/mod_logio.so
LoadModule env_module lib/apache2/modules/mod_env.so
#LoadModule expires_module lib/apache2/modules/mod_expires.so
LoadModule headers_module lib/apache2/modules/mod_headers.so
#LoadModule unique_id_module lib/apache2/modules/mod_unique_id.so
LoadModule setenvif_module lib/apache2/modules/mod_setenvif.so
LoadModule version_module lib/apache2/modules/mod_version.so
#LoadModule remoteip_module lib/apache2/modules/mod_remoteip.so

LoadModule proxy_module lib/apache2/modules/mod_proxy.so
#LoadModule proxy_connect_module lib/apache2/modules/mod_proxy_connect.so
#LoadModule proxy_ftp_module lib/apache2/modules/mod_proxy_ftp.so

LoadModule proxy_http_module lib/apache2/modules/mod_proxy_http.so

# LoadModule proxy_fcgi_module lib/apache2/modules/mod_proxy_fcgi.so
#LoadModule proxy_scgi_module lib/apache2/modules/mod_proxy_scgi.so
#LoadModule proxy_fdpass_module lib/apache2/modules/mod_proxy_fdpass.so
#LoadModule proxy_wstunnel_module lib/apache2/modules/mod_proxy_wstunnel.so
#LoadModule proxy_ajp_module lib/apache2/modules/mod_proxy_ajp.so
#LoadModule proxy_balancer_module lib/apache2/modules/mod_proxy_balancer.so
#LoadModule proxy_express_module lib/apache2/modules/mod_proxy_express.so
#LoadModule proxy_hcheck_module lib/apache2/modules/mod_proxy_hcheck.so
#LoadModule session_module lib/apache2/modules/mod_session.so
#LoadModule session_cookie_module lib/apache2/modules/mod_session_cookie.so
#LoadModule session_crypto_module lib/apache2/modules/mod_session_crypto.so
#LoadModule session_dbd_module lib/apache2/modules/mod_session_dbd.so
#LoadModule slotmem_shm_module lib/apache2/modules/mod_slotmem_shm.so
#LoadModule ssl_module lib/apache2/modules/mod_ssl.so
#LoadModule lbmethod_byrequests_module lib/apache2/modules/mod_lbmethod_byrequests.so
#LoadModule lbmethod_bytraffic_module lib/apache2/modules/mod_lbmethod_bytraffic.so
#LoadModule lbmethod_bybusyness_module lib/apache2/modules/mod_lbmethod_bybusyness.so
#LoadModule lbmethod_heartbeat_module lib/apache2/modules/mod_lbmethod_heartbeat.so
LoadModule unixd_module lib/apache2/modules/mod_unixd.so
#LoadModule dav_module lib/apache2/modules/mod_dav.so
LoadModule status_module lib/apache2/modules/mod_status.so
LoadModule autoindex_module lib/apache2/modules/mod_autoindex.so
#LoadModule info_module lib/apache2/modules/mod_info.so
#LoadModule cgid_module lib/apache2/modules/mod_cgid.so
#LoadModule dav_fs_module lib/apache2/modules/mod_dav_fs.so
#LoadModule vhost_alias_module lib/apache2/modules/mod_vhost_alias.so
#LoadModule negotiation_module lib/apache2/modules/mod_negotiation.so
LoadModule dir_module lib/apache2/modules/mod_dir.so
#LoadModule actions_module lib/apache2/modules/mod_actions.so
#LoadModule speling_module lib/apache2/modules/mod_speling.so
#LoadModule userdir_module lib/apache2/modules/mod_userdir.so
LoadModule alias_module lib/apache2/modules/mod_alias.so
LoadModule rewrite_module lib/apache2/modules/mod_rewrite.so


# ProxyPass "/api/" "fcgi://localhost:5000/"
# ProxyPass /apis     fcgi://127.0.0.1:5000/
ProxyPass /api/ http://127.0.0.1:5000/
ProxyPassReverse /api/ http://127.0.0.1:5000/


<IfModule unixd_module>
#
# If you wish httpd to run as a different user or group, you must run
# httpd as root initially and it will switch.  
#
# User/Group: The name (or #number) of the user/group to run httpd as.
# It is usually good practice to create a dedicated user and group for
# running httpd, as with most system services.
#
User daemon
Group daemon

</IfModule>

ServerAdmin you@example.com

#
ServerName localhost:80

#
# Deny access to the entirety of your server's filesystem. You must
# explicitly permit access to web content directories in other 
# <Directory> blocks below.
#
<Directory />
    AllowOverride none
    Require all denied
</Directory>

#

DocumentRoot "/var/www"
<Directory "/var/www">
    #
    Options Indexes FollowSymLinks

    #
    AllowOverride None

    #
    # Controls who can get stuff from this server.
    #
    Require all granted
</Directory>

#
<IfModule dir_module>
    # DirectoryIndex index.html
    DirectoryIndex index.php
</IfModule>

#
<Files ".ht*">
    Require all denied
</Files>

#
ErrorLog "/var/apache2/logs/error_log"

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel warn

<IfModule log_config_module>
    #
    # The following directives define some format nicknames for use with
    # a CustomLog directive (see below).
    #
    LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%h %l %u %t \"%r\" %>s %b" common

    <IfModule logio_module>
      # You need to enable mod_logio.c to use %I and %O
      LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
    </IfModule>

    #
    # The location and format of the access logfile (Common Logfile Format).
    # If you do not define any access logfiles within a <VirtualHost>
    # container, they will be logged here.  Contrariwise, if you *do*
    # define per-<VirtualHost> access logfiles, transactions will be
    # logged therein and *not* in this file.
    #
    CustomLog "/var/apache2/logs/access_log" common

    #
    # If you prefer a logfile with access, agent, and referer information
    # (Combined Logfile Format) you can use the following directive.
    #
    #CustomLog "/var/apache2/logs/access_log" combined
</IfModule>

<IfModule alias_module>
    #
    ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"

</IfModule>

<IfModule cgid_module>
    #
    # ScriptSock: On threaded servers, designate the path to the UNIX
    # socket used to communicate with the CGI daemon of mod_cgid.
    #
    #Scriptsock cgisock
</IfModule>

#
# "/usr/share/apache2/cgi-bin" should be changed to whatever your ScriptAliased
# CGI directory exists, if you have that configured.
#
<Directory "/var/www/cgi-bin">
    AllowOverride None
    Options None
    Require all granted
</Directory>

<IfModule headers_module>
    #
    # Avoid passing HTTP_PROXY environment to CGI's on this or any proxied
    # backend servers which have lingering "httpoxy" defects.
    # 'Proxy' request header is undefined by the IETF, not listed by IANA
    #
    RequestHeader unset Proxy early
</IfModule>

<IfModule mime_module>
    #
    TypesConfig /etc/apache2/mime.types

    #
    #AddType application/x-gzip .tgz
    #
    # AddEncoding allows you to have certain browsers uncompress
    # information on the fly. Note: Not all browsers support this.
    #
    #AddEncoding x-compress .Z
    #AddEncoding x-gzip .gz .tgz
    #
    # If the AddEncoding directives above are commented-out, then you
    # probably should define those extensions to indicate media types:
    #
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz

    #
    # AddHandler allows you to map certain file extensions to "handlers":
    # actions unrelated to filetype. These can be either built into the server
    # or added with the Action directive (see below)
    #
    # To use CGI scripts outside of ScriptAliased directories:
    # (You will also need to add "ExecCGI" to the "Options" directive.)
    #
    #AddHandler cgi-script .cgi

    # For type maps (negotiated resources):
    #AddHandler type-map var

    #
    # Filters allow you to process content before it is sent to the client.
    #
    # To parse .shtml files for server-side includes (SSI):
    # (You will also need to add "Includes" to the "Options" directive.)
    #
    #AddType text/html .shtml
    #AddOutputFilter INCLUDES .shtml
</IfModule>

#
#

#
# MaxRanges: Maximum number of Ranges in a request before
# returning the entire resource, or one of the special
# values 'default', 'none' or 'unlimited'.
# Default setting is to accept 200 Ranges.
#MaxRanges unlimited

#
# EnableMMAP and EnableSendfile: On systems that support it, 
# memory-mapping or the sendfile syscall may be used to deliver
# files.  This usually improves server performance, but must
# be turned off when serving from networked-mounted 
# filesystems or if support for these functions is otherwise
# broken on your system.
# Defaults: EnableMMAP On, EnableSendfile Off
#
#EnableMMAP off
#EnableSendfile on

# Supplemental configuration
#
# The configuration files in the /etc/apache2/extra/ directory can be 
# included to add extra features or to modify the default configuration of 
# the server, or you may simply copy their contents here and change as 
# necessary.

# Server-pool management (MPM specific)
#Include /etc/apache2/extra/httpd-mpm.conf

# Multi-language error messages
#Include /etc/apache2/extra/httpd-multilang-errordoc.conf

# Fancy directory listings
#Include /etc/apache2/extra/httpd-autoindex.conf

# Language settings
#Include /etc/apache2/extra/httpd-languages.conf

# User home directories
#Include /etc/apache2/extra/httpd-userdir.conf

# Real-time info on requests and configuration
#Include /etc/apache2/extra/httpd-info.conf

# Virtual hosts
#Include /etc/apache2/extra/httpd-vhosts.conf

# Local access to the Apache HTTP Server Manual
#Include /etc/apache2/extra/httpd-manual.conf

# Distributed authoring and versioning (WebDAV)
#Include /etc/apache2/extra/httpd-dav.conf

# Various default settings
#Include /etc/apache2/extra/httpd-default.conf

# Configure mod_proxy_html to understand HTML4/XHTML1
<IfModule proxy_html_module>
Include /etc/apache2/extra/proxy-html.conf
</IfModule>

# Secure (SSL/TLS) connections
#Include /etc/apache2/extra/httpd-ssl.conf
#
# Note: The following must must be present to support
#       starting without SSL on platforms with no /dev/random equivalent
#       but a statically compiled-in mod_ssl.
#
<IfModule ssl_module>
SSLRandomSeed startup builtin
SSLRandomSeed connect builtin
</IfModule>


IncludeOptional /etc/apache2/conf.d/*.conf
IncludeOptional /etc/apache2/modules.d/*.load
IncludeOptional /etc/apache2/modules.d/*.conf

Listen 8888                                                              
<VirtualHost *:8888>                                                    
#    ServerAdmin admin@rest.com                                           
#    ServerName rest                                               
    #ServerAlias www.rest.com                                     
    DocumentRoot "/var/www/api"                                             
    ErrorLog "/var/apache2/logs/error_log"                           
    CustomLog "/var/apache2/logs/access_log" combined                
                                                                     
    # Set access permission                                       
    <Directory "/var/www/api">                                    
        #Allow from all                                                 
        Require all granted                                       
        AllowOverride All                                                
    </Directory>                                                     
</VirtualHost>

# Set document root to be "basic/web"
#DocumentRoot "/var/www/api"

#<Directory "/var/www/api">
    # use mod_rewrite for pretty URL support
#    RewriteEngine on

    # if $showScriptName is false in UrlManager, do not allow accessing URLs with script name
#    RewriteRule ^index.php/ - [L,R=404]

    # If a directory or a file exists, use the request directly
#    RewriteCond %{REQUEST_FILENAME} !-f
#    RewriteCond %{REQUEST_FILENAME} !-d

    # Otherwise forward the request to index.php
#    RewriteRule . index.php

    # ...other settings...
#</Directory>

PidFile /run/httpd.pid